/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\eyepop_squats_ui.glb -T -p 6 -j -s -K -k -R 2048 
Files: .\eyepop_squats_ui.glb [3.03MB] > C:\Users\edmun\OneDrive\Documents\_SPACE\EyePop\EyePopDemos\node\basic-eyepop-example\src\assets\eyepop_squats_ui_1-transformed.glb [826.14KB] (73%)
*/
import gltfUrl from './eyepop_squats_ui_1-transformed.glb'
import React, { useEffect, useRef } from 'react'
import { Text, useGLTF } from '@react-three/drei'
import gsap from 'gsap'

export function WorkoutIndicator({ count })
{
  const { nodes, materials } = useGLTF(gltfUrl)

  // refs for each tick
  const tick_1 = useRef(null)
  const tick_2 = useRef(null)
  const tick_3 = useRef(null)
  const tick_4 = useRef(null)
  const tick_5 = useRef(null)
  const tick_6 = useRef(null)
  const tick_7 = useRef(null)
  const tick_8 = useRef(null)
  const tick_9 = useRef(null)
  const tick_10 = useRef(null)
  const tick_11 = useRef(null)
  const tick_12 = useRef(null)
  const tick_13 = useRef(null)
  const tick_14 = useRef(null)
  const tick_15 = useRef(null)
  const tick_16 = useRef(null)
  const tick_17 = useRef(null)
  const tick_18 = useRef(null)
  const tick_19 = useRef(null)
  const tick_20 = useRef(null)
  const tick_21 = useRef(null)

  const tickRefs = [ tick_1, tick_2, tick_3, tick_4, tick_5, tick_6, tick_7, tick_8, tick_9, tick_10, tick_11, tick_12, tick_13, tick_14, tick_15, tick_16, tick_17, tick_18, tick_19, tick_20, tick_21 ]

  // given a percentage, set the ticks as visible or not
  function setTicks(percentage)
  {
    for (let i = 0; i < tickRefs.length; i++)
    {
      const tick = tickRefs[ i ].current;
      if (!tick) continue;

      const tickPercentage = i / tickRefs.length;
      if (tickPercentage <= percentage)
      {
        tick.visible = true;
        gsap.fromTo(
          tick.scale,
          { x: 0, y: 0, z: 0 },
          { x: 1, y: 1, z: 1, duration: 0.15, ease: "bounce.out", delay: i * 0.1 }
        );
      } else
      {
        tick.visible = false;
        tick.scale.set(0, 0, 0);
      }
    }
  }


  useEffect(() =>
  {

    if (!count) return;

    setTicks(count / 21)

  }, [ count ])

  const scale = .03


  return (
    <group dispose={null} scale={[ scale, scale, scale ]} position={[ 0, .29, .01 ]} rotation={[ 0, Math.PI, 0 ]}>
      <group name="Scene">


        <Text position={[ 0, 0, 0 ]} rotation={[ 0, Math.PI, 0 ]} fontSize={5} color="white" maxWidth={4} lineHeight={1} letterSpacing={0} textAlign="center" font="https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu4mxP.ttf">
          {count}
        </Text>

        <mesh name="bg" castShadow receiveShadow geometry={nodes.bg.geometry} material={materials.bake} position={[ 0, 0, 0.037076 ]} rotation={[ Math.PI / 2, 0, 0 ]} />
        <mesh name="tick_1" ref={tick_1} visible={false} castShadow receiveShadow geometry={nodes.tick_1.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_2" ref={tick_2} visible={false} castShadow receiveShadow geometry={nodes.tick_2.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_3" ref={tick_3} visible={false} castShadow receiveShadow geometry={nodes.tick_3.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_4" ref={tick_4} visible={false} castShadow receiveShadow geometry={nodes.tick_4.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_5" ref={tick_5} visible={false} castShadow receiveShadow geometry={nodes.tick_5.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_6" ref={tick_6} visible={false} castShadow receiveShadow geometry={nodes.tick_6.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_7" ref={tick_7} visible={false} castShadow receiveShadow geometry={nodes.tick_7.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_8" ref={tick_8} visible={false} castShadow receiveShadow geometry={nodes.tick_8.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_9" ref={tick_9} visible={false} castShadow receiveShadow geometry={nodes.tick_9.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_10" ref={tick_10} visible={false} castShadow receiveShadow geometry={nodes.tick_10.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_11" ref={tick_11} visible={false} castShadow receiveShadow geometry={nodes.tick_11.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_12" ref={tick_12} visible={false} castShadow receiveShadow geometry={nodes.tick_12.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_13" ref={tick_13} visible={false} castShadow receiveShadow geometry={nodes.tick_13.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_14" ref={tick_14} visible={false} castShadow receiveShadow geometry={nodes.tick_14.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_15" ref={tick_15} visible={false} castShadow receiveShadow geometry={nodes.tick_15.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_16" ref={tick_16} visible={false} castShadow receiveShadow geometry={nodes.tick_16.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_17" ref={tick_17} visible={false} castShadow receiveShadow geometry={nodes.tick_17.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_18" ref={tick_18} visible={false} castShadow receiveShadow geometry={nodes.tick_18.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_19" ref={tick_19} visible={false} castShadow receiveShadow geometry={nodes.tick_19.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_20" ref={tick_20} visible={false} castShadow receiveShadow geometry={nodes.tick_20.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
        <mesh name="tick_21" ref={tick_21} visible={false} castShadow receiveShadow geometry={nodes.tick_21.geometry} material={materials.basic_white} position={[ 0, 0, 2.54 ]} />
      </group>
    </group>
  )
}

useGLTF.preload(gltfUrl)
